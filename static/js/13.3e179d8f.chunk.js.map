{"version":3,"sources":["scorecounter/cards/asso.JPG","scorecounter/cards/due.JPG","scorecounter/cards/tre.JPG","scorecounter/cards/quattro.JPG","scorecounter/cards/cinque.JPG","scorecounter/cards/sei.JPG","scorecounter/cards/sette.JPG","scorecounter/cards/fante.JPG","scorecounter/cards/cavallo.JPG","scorecounter/cards/re.JPG","scorecounter/ScoreLogic.js","scorecounter/SinglePlayerCounter.js","scorecounter/PlayerScore.js","scorecounter/ScopaCounter.js","scorecounter/BriscolaCounter.js","scorecounter/ScoreCounter.js"],"names":["players","saveScore","playerName","score","localStorage","setItem","checkScore","tag","getItem","cards","Asso","Due","Tre","Quattro","Cinque","Sei","Sette","Fante","Cavallo","Re","SinglePlayerCounter","props","useState","parseInt","gametag","plnum","setScore","changeScore","plusMin","useEffect","reset","toString","className","onClick","PlayerScore","gameTag","gametype","setReset","resetScore","map","pl","forEach","ScopaCounter","comp","setComp","sort","a","b","primera","obj","points","cardName","name","src","pic","alt","BriscolaCounter","filter","briscola","ScoreCounter","back","getMenuItemByTag","game","setGame","selectGame","href","target","rel","ButtonTemplate","id","width","height","svgColor","textColor","textField","icon","iconColor"],"mappings":"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","file":"static/js/13.3e179d8f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/asso.382f82ad.JPG\";","export default __webpack_public_path__ + \"static/media/due.10872e92.JPG\";","export default __webpack_public_path__ + \"static/media/tre.cbb14dd4.JPG\";","export default __webpack_public_path__ + \"static/media/quattro.ede82d9e.JPG\";","export default __webpack_public_path__ + \"static/media/cinque.13439659.JPG\";","export default __webpack_public_path__ + \"static/media/sei.1e5cdc57.JPG\";","export default __webpack_public_path__ + \"static/media/sette.1d2ebf51.JPG\";","export default __webpack_public_path__ + \"static/media/fante.1bfbd0e9.JPG\";","export default __webpack_public_path__ + \"static/media/cavallo.fca52443.JPG\";","export default __webpack_public_path__ + \"static/media/re.2588a82e.JPG\";","import Asso from './cards/asso.JPG';\nimport Due from './cards/due.JPG';\nimport Tre from './cards/tre.JPG';\nimport Quattro from './cards/quattro.JPG';\nimport Cinque from './cards/cinque.JPG';\nimport Sei from './cards/sei.JPG';\nimport Sette from './cards/sette.JPG';\nimport Fante from './cards/fante.JPG';\nimport Cavallo from './cards/cavallo.JPG';\nimport Re from './cards/re.JPG';\n\n\nexport const players = ['one', 'two', 'three', 'four'];\n\nexport const saveScore = function (playerName, score){\n    localStorage.setItem(playerName, score);\n}\n\nexport const loadScore = function (playerName){\n    return localStorage.getItem(playerName);\n}\n\nexport const checkScore = function(tag){\n    return loadScore(tag) || \"0\";\n}\n\n/*\nPrimera (primera)\nil 7 vale 21 punti\nil 6 vale 18 punti\nlâ€™Asso vale 16 punti\nil 5 vale 15 punti\nil 4 vale 14 punti\nil 3 vale 13 punti\nil 2 vale 12 punti\nle figure (re, cavallo e donna) valgono 10 punti\n\nbriscola\nl'asso vale 11\nil 3 vale 10\nil fante vale 2\nil cavallo vale 3\nil re vale 4\ntutte le altre carte valgono 0\n */\nexport const cards = [\n    {\n        'name': 'Asso',\n        'briscola': 11,\n        'primera': 16,\n        'pic': Asso\n    },\n    {\n        'name': 'Due',\n        'briscola': 0,\n        'primera': 12,\n        'pic': Due\n    },\n    {\n        'name': 'Tre',\n        'briscola': 10,\n        'primera': 13,\n        'pic': Tre\n    },\n    {\n        'name': 'Quattro',\n        'briscola': 0,\n        'primera': 14,\n        'pic': Quattro\n    },\n    {\n        'name': 'Cinque',\n        'briscola': 0,\n        'primera': 15,\n        'pic': Cinque\n    },\n    {\n        'name': 'Sei',\n        'briscola': 0,\n        'primera': 18,\n        'pic': Sei\n    },\n    {\n        'name': 'Sette',\n        'briscola': 0,\n        'primera': 21,\n        'pic': Sette\n    },\n    {\n        'name': 'Fante',\n        'briscola': 2,\n        'primera': 10,\n        'pic': Fante\n    },\n    {\n        'name': 'Cavallo',\n        'briscola': 3,\n        'primera': 10,\n        'pic': Cavallo\n    },\n    {\n        'name': 'Re',\n        'briscola': 4,\n        'primera': 10,\n        'pic': Re\n    },\n];\n\n","import {useEffect, useState} from \"react\";\nimport \"./SinglePlayerCounter.css\";\nimport {checkScore, saveScore} from \"./ScoreLogic\";\nimport React from \"react\";\n\nexport default function SinglePlayerCounter(props){\n\n    const [score, setScore] = useState(parseInt(checkScore(props.gametag + props.plnum)));\n\n    function changeScore(plusMin) {\n        if(plusMin === '+') setScore(score+1);\n        if(plusMin === '-' && score > 0) setScore(score-1);\n    }\n\n    useEffect(() => {\n        if(!props.reset) setScore(0);\n    },[props.reset])\n\n    useEffect((changeScore) => {\n        saveScore(props.gametag + props.plnum, score.toString());\n    })\n\n    return(\n        <div className='single-pl-score'>\n            <button onClick={() => changeScore('-')}>-</button>\n            <p>Player {props.plnum}: {score}</p>\n            <button onClick={() => changeScore('+')}>+</button>\n        </div>\n    )\n}","import {players, saveScore} from \"./ScoreLogic\";\nimport \"./PlayerScore.css\";\nimport SinglePlayerCounter from \"./SinglePlayerCounter\";\nimport {useEffect, useState} from \"react\";\nimport React from \"react\";\n\nexport default function PlayerScore(props){\n\n    const gameTag = 'score-card-' + props.gametype + '-player-';\n    const [reset, setReset] = useState(true);\n\n    function resetScore(){\n        players.forEach(pl => {\n            saveScore(gameTag + pl, \"0\");\n            setReset(false);\n        })\n    }\n\n    useEffect(resetScore => {\n        if(!reset) setReset(true);\n    },[reset])\n\n    return(\n        <div className='player-score-board'>\n            {players.map(pl => {\n                return (<SinglePlayerCounter key={gameTag + pl} plnum={pl} gametag={gameTag} reset={reset}/>)\n            })}\n            <button className='reset-score-pl-button' onClick={() => resetScore()}>Reset Score</button>\n            <p className='score-pl-note'>Score will be automatically saved to Browser cache on every change</p>\n        </div>\n    )\n}","import \"./ScopaCounter.css\";\nimport {cards} from \"./ScoreLogic\";\nimport {useState} from \"react\";\nimport React from \"react\";\n\nexport default function ScopaCounter(){\n\n    const [score, setScore] = useState(0);\n    const [comp, setComp] = useState('');\n\n    function sumPoints(points, cardName){\n        const newComp = comp + ' ' + cardName;\n        setComp(newComp);\n        setScore(score + points);\n    }\n\n    function resetScore(){\n        setComp('');\n        setScore(0);\n    }\n\n    return(\n        <div className='scopa-board-counter'>\n            <p>Click on the card to add to the total Primera score</p>\n            {cards.sort((a,b) => b.primera - a.primera).map(obj => {\n                return(\n                    <button key={obj.name + '-card'} className='card-button-pic' onClick={() => sumPoints(obj.primera, obj.name)}>\n                        <img src={obj.pic} alt='card'/>\n                    </button>\n                )\n            })}\n            <p>Total score: [ {comp} ] = {score}</p>\n            <button className='primera-reset-bt' onClick={() => resetScore()}>Reset score</button>\n        </div>\n    )\n}","import \"./BriscolaCounter.css\";\nimport {useState} from \"react\";\nimport {cards} from \"./ScoreLogic\";\nimport React from \"react\";\n\nexport default function BriscolaCounter(){\n\n    const [score, setScore] = useState(0);\n    const [comp, setComp] = useState('');\n\n    function sumPoints(points, cardName){\n        const newComp = comp + ' ' + cardName;\n        setComp(newComp);\n        setScore(score + points);\n    }\n\n    function resetScore(){\n        setComp('');\n        setScore(0);\n    }\n\n    function printWin(){\n        if (score < 60) return \" >> You are Loosing << \";\n        if (score === 60) return \" >> Pair << \";\n        if (score > 60) return \" >> You Win << \";\n    }\n\n    return(\n        <div className='briscola-board-counter'>\n            <p>Click on the card to add to the total score</p>\n            {cards.filter(obj => obj.briscola > 0).sort((a,b) => b.briscola - a.briscola).map(obj => {\n                return(\n                    <button key={obj.name + '-card'} className='card-button-pic' onClick={() => sumPoints(obj.briscola, obj.name)}>\n                        <img src={obj.pic} alt='card'/>\n                    </button>\n                )\n            })}\n            <p>Total score: [ {comp} ] = {score} <br/> {printWin()}</p>\n            <button className='briscola-reset-bt' onClick={() => resetScore()}>Reset score</button>\n        </div>\n    )\n}","import ButtonTemplate from \"../menu/ButtonTemplate\";\nimport React, {useState} from \"react\";\nimport {getMenuItemByTag} from \"../menu/MenuHandler\";\nimport \"./ScoreCounter.css\";\nimport PlayerScore from \"./PlayerScore\";\nimport ScopaCounter from \"./ScopaCounter\";\nimport BriscolaCounter from \"./BriscolaCounter\";\n\nexport default function ScoreCounter(){\n\n    const back = getMenuItemByTag('back');\n\n    const [game, setGame] = useState('');\n\n    function selectGame(game){\n        setGame(game);\n    }\n\n    return(\n        <div>\n            <div className='score-card-title'>\n                <h1>Score counter for Italian Card Games</h1>\n                <h2>Please choose your game</h2>\n            </div>\n            <div className='card-game-list'>\n                <button onClick={() => selectGame('Scopa')}>Scopa</button>\n                <button onClick={() => selectGame('Briscola')}>Briscola</button>\n            </div>\n            {\n                (game === 'Scopa') &&\n                <div>\n                    <p className='card-game-name'>{game}</p>\n                    <PlayerScore gametype={game}/>\n                    <ScopaCounter/>\n                    <div className=\"rules-card-game\">\n                        <a href=\"https://www.tisuggerisco.com/il-gioco-della-scopa/\" target=\"_blank\" rel=\"noreferrer\">Rules</a>\n                    </div>\n                </div>\n\n            }\n            {\n                (game === 'Briscola') &&\n                <div>\n                    <p className='card-game-name'>{game}</p>\n                    <PlayerScore gametype={game}/>\n                    <BriscolaCounter/>\n                    <div className=\"rules-card-game\">\n                        <a href=\"https://www.dimensionecasino.com/skillgames/briscola/regole-briscola\" target=\"_blank\" rel=\"noreferrer\">Rules</a>\n                    </div>\n                </div>\n\n            }\n            <ButtonTemplate\n                key={back.id}\n                id={back.id}\n                width={back.width}\n                height={back.height}\n                svgColor={back.svgColor}\n                textColor={back.textColor}\n                textField={back.textField}\n                icon={back.icon}\n                iconColor={back.iconColor}\n                tag='menu'\n            />\n        </div>\n    )\n}"],"sourceRoot":""}