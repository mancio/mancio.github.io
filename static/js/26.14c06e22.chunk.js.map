{"version":3,"sources":["kitchentools/KitchenLogic.js","kitchentools/Hydration.js","kitchentools/IngQuantity.js","kitchentools/Ktools.js","logic/TextHandler.js"],"names":["ingMap","Map","newIngMap","ingString","returnLine","concat","clearMap","clear","getOil","spoon","parseInt","setAllReadOnly","tag","ids","i","document","getElementById","readOnly","getAllIngNames","Array","from","keys","difRatio","oldVal","newVal","updateAllIng","name","ratio","get","getOldVal","forEach","el","set","Math","round","Hydration","findElements","pos","flour","value","water","hydration","yeast","oil","input","length","isNaN","verifyInputs","liquid","solid","quantity","window","alert","className","type","id","min","defaultValue","onClick","IngQuantity","useState","elID","setElID","elem","setElem","elOut","setElOut","drop","setDrop","add","setAdd","full","setFull","done","setDone","result","setResult","setRatio","useEffect","Input","ingName","ingSize","start","options","tagName","tagValue","String","addAllIng","n","push","update","out","counter","sel","key","text","toString","reset","copyToClipBoard","copyTextToClipBoard","then","Ktools","back","getMenuItemByTag","ButtonTemplate","width","height","svgColor","textColor","textField","icon","iconColor","replaceHtmlCharacters","string","replace","match","dec","fromCharCode","uriToYouTube","encodeURI","newLine","tab","navigator","clipboard","writeText","saveToTextFile","filename","element","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","removeChild"],"mappings":"2LAAMA,G,MAAS,IAAIC,KACbC,EAAY,IAAID,IAClBE,EAAY,GAWVC,EAAa,WACfD,EAAYA,EAAUE,OAAO,GAAI,OAOxBC,EAAW,WACpBN,EAAOO,QACPL,EAAUK,SAWDC,EAAS,SAAUC,GAC5B,OAAyB,GAAlBC,SAASD,IAUPE,EAAiB,SAAUC,EAAKC,GACzC,IAAK,IAAIC,EAAI,EAAGA,EAAED,EAAKC,IACnBC,SAASC,eAAeJ,EAAME,GAAGG,UAAW,GAIvCC,EAAiB,WAC1B,OAAOC,MAAMC,KAAKpB,EAAOqB,SAehBC,EAAW,SAAUC,EAAQC,GACtC,OAAOd,SAASc,GAAQd,SAASa,IAOxBE,EAAe,SAAUC,EAAMF,GACxC,IAAMG,EAAQL,EALO,SAAUI,GAC/B,OAAOhB,SAASV,EAAO4B,IAAIF,IAIJG,CAAUH,GAAOF,GACxCN,IAAiBY,SAAQ,SAAAC,GACrB7B,EAAU8B,IAAID,EAAIE,KAAKC,MAAMlC,EAAO4B,IAAIG,GAAMJ,Q,OC1E/C,SAASQ,IAEZ,SAASC,EAAaC,GAElB,IAAIC,EAAQ5B,SAASK,SAASC,eAAe,YAAYuB,OACrDC,EAAQ9B,SAASK,SAASC,eAAe,YAAYuB,OACrDE,EAAY/B,SAASK,SAASC,eAAe,aAAauB,OAE1DG,EAAQhC,SAASK,SAASC,eAAe,YAAYuB,OACrDI,EAAMjC,SAASK,SAASC,eAAe,UAAUuB,OAYrD,GDaoB,SAAUK,EAAOP,GAC1C,IAAI,IAAIvB,EAAI,EAAGA,EAAE8B,EAAMC,OAAQ/B,IAC3B,GAAGA,IAAMuB,GAAOS,MAAMF,EAAM9B,IAAK,OAAO,EAE5C,OAAO,ECjBCiC,CAVW,CAACT,EAAOE,EAAOC,GAUNJ,GAAK,CACxB,IAAMW,EAASR,EAAQhC,EAAOmC,GACxBM,EAAQX,EAAQI,EAClBQ,EAAW,EACJ,IAARb,IACCa,EAAWxC,SAASuB,KAAKC,MAAMc,EAASP,EAAY,KAAOC,GAC3D3B,SAASC,eAAe,YAAYuB,MAAQW,GAErC,IAARb,IACCa,EAAWxC,SAASuB,KAAKC,MAAMe,EAAQR,EAAY,KAAOjC,EAAOmC,IACjE5B,SAASC,eAAe,YAAYuB,MAAQW,GAErC,IAARb,IACCa,EAAWxC,SAASuB,KAAKC,MAAMc,EAASC,EAAQ,MAChDlC,SAASC,eAAe,aAAauB,MAAQW,QAG9CC,OAAOC,MAAM,uBAIxB,OACI,sBAAKC,UAAU,iBAAf,UACI,sDACA,2HAC8F,uBAD9F,uGAEwG,uBAFxG,oCAKA,sBAAKA,UAAU,qBAAf,UACI,yDACkB,+BAAM,uBAAOA,UAAU,gBAAgBC,KAAK,SAAS5B,KAAK,QAAQ6B,GAAG,WAAWC,IAAI,IAAIC,aAAa,UACnH,+BAAM,wBAAQC,QAAS,kBAAMtB,EAAa,IAAIiB,UAAU,uBAAlD,uBAEV,4DACqB,+BAAM,uBAAOA,UAAU,gBAAgBC,KAAK,SAAS5B,KAAK,QAAQ6B,GAAG,WAAWC,IAAI,IAAIC,aAAa,WAE1H,2DACoB,+BAAM,uBAAOJ,UAAU,gBAAgBC,KAAK,SAAS5B,KAAK,QAAQ6B,GAAG,WAAWC,IAAI,IAAIC,aAAa,SACrH,+BAAM,wBAAQC,QAAS,kBAAMtB,EAAa,IAAIiB,UAAU,uBAAlD,uBAEV,8DACuB,+BAAM,uBAAOA,UAAU,gBAAgBC,KAAK,SAAS5B,KAAK,MAAM6B,GAAG,SAASC,IAAI,IAAIC,aAAa,QACpH,6DAEJ,8CACiB,+BAAM,uBAAOJ,UAAU,gBAAgBC,KAAK,SAAS5B,KAAK,YAAY6B,GAAG,YAAYC,IAAI,IAAIC,aAAa,SACvH,+BAAM,wBAAQC,QAAS,kBAAMtB,EAAa,IAAIiB,UAAU,uBAAlD,6B,mBC1DnB,SAASM,IACZ,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAsBR,oBAAS,GAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAwBV,oBAAS,GAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAAwBZ,oBAAS,GAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAA4Bd,oBAAS,GAArC,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAA0BhB,mBAAS,GAAnC,mBAAOjC,EAAP,KAAckD,EAAd,KAEAC,qBAAU,WACFjB,GAAQ,GAAGW,GAAQ,KACzB,CAACX,IAEH,IAAMkB,EAAQ,WACV,IAAMC,EAAU,YAAcnB,EACxBoB,EAAU,YAAcpB,EAC9B,OACI,8BACI,qCAAGA,EAAO,EAAV,QACA,+BAAM,uBAAOR,UAAU,gBAAgBC,KAAK,OAAO5B,KAAMsD,EAAuBzB,GAAIyB,EAASvB,aAAc,QAAUI,EAAO,IAArDmB,KACvE,+BAAM,uBAAO3B,UAAU,gBAAgBC,KAAK,SAAS5B,KAAMuD,EAAuB1B,GAAI0B,EAASxB,aAAa,IAAID,IAAI,KAA3CyB,KACzE,+DAUZ,SAASC,IACL5E,IACA,IAAI6E,EAAU,IFMG,SAAUC,EAASC,EAAUxB,GAClD,IAAK,IAAI/C,EAAI,EAAGA,EAAE+C,EAAM/C,IAAI,CACxB,IAAMY,EAAO4D,OAAOvE,SAASC,eAAeoE,EAAUtE,GAAGyB,OACnDA,EAAQ7B,SAASK,SAASC,eAAeqE,EAAWvE,GAAGyB,OAC7DvC,EAAOgC,IAAIN,EAAMa,IETjBgD,CAAU,YAAY,YAAa1B,GACnC,IFY0BhD,EEZtBwB,EAAM,EACVnB,IAAiBY,SAAQ,SAAA0D,GACrBL,EAAQM,KAAK,wBAAkBlD,MAAOiD,EAAzB,SAA6BA,GAAhBnD,IAC1BA,OAEJ+B,EAAQe,GFOkBtE,EENdgD,EFOT1C,MAAMC,KAAKpB,EAAOqB,QAAQwB,SAAWhC,GENpC6D,GAAQ,GACRF,GAAQ,GACR7D,EAAe,YAAakD,GAC5BlD,EAAe,YAAakD,IACzBV,OAAOC,MAAM,kDAGxB,SAASsC,IACL,IFpC6BhE,EEoCzBiE,EAAM,GACNC,EAAU,EACRC,EAAM9E,SAASC,eAAe,UAAUuB,MACxCf,EAAST,SAASC,eAAe,UAAUuB,MACjDsC,EAASvD,GFxCoBI,EEwCCmE,EFvC3B7F,EAAO4B,IAAIF,IEuCsBF,IACX,IAArBd,SAASc,GAAe2B,OAAOC,MAAM,6BAErC3B,EAAaoE,EAAKrE,GF9CnBtB,EE+Ca4B,SAAQ,SAACS,EAAOuD,GFlEZ,IAAUC,IEmETD,EAAM,IAAMvD,EAAQ,WFlE7CpC,EAAYA,EAAUE,OAAO,GAAI0F,EAAKC,YACtC5F,IEkEYuF,EAAIF,KACA,oBAAiBlC,GAAIqC,EAArB,UAA+BE,EAA/B,KAAsCvD,EAAtC,cAAQqD,IAEZA,OAEJ1B,EAASyB,GACTrB,GAAO,GACPE,GAAQ,GACRE,GAAQ,GACRE,GAAU,IAIlB,SAASqB,IACLnC,EAAQ,GACRE,EAAQ,IACRE,EAAS,IACTE,EAAQ,IACRE,GAAO,GACPE,GAAQ,GACRE,GAAQ,GACRE,GAAU,GACVC,EAAS,GACTvE,IFjFJH,EAAY,GEqFZ,SAAS+F,IACLC,YFnGGhG,GEmG+BiG,MAAK,kBAAMjD,OAAOC,MAAM,kBAG9D,OACI,sBAAKC,UAAU,iBAAf,UACI,wDACCgB,GACG,qCACI,+EACA,qBAAIhB,UAAU,iBAAd,UACI,6EACA,uFACA,oEACA,mFAIXsB,GAAU,mBAAGtB,UAAU,qBAAb,sBACVgB,GAAO,wBAAQhB,UAAU,uBAAuBK,QAAS,kBA/E9DI,EAAQD,EAAO,QACfG,EAAQD,EAAK1D,OAAO,cAAC0E,EAAD,GAAYlB,MA8EpB,4BACPE,EACAQ,GAAQ,wBAAQlB,UAAU,uBAAuBK,QAAS,kBAAMwB,KAAxD,mBACRT,GACG,qCACI,wBAAQlB,GAAG,SAAX,SAAqBY,IACrB,iEACA,uBAAOd,UAAU,gBAAgBC,KAAK,SAAS5B,KAAK,SAAS6B,GAAG,SAASE,aAAa,IAAID,IAAI,MAC9F,wBAAQH,UAAU,uBAAuBK,QAAS,kBAAMgC,KAAxD,uCAGPf,GACG,qCACI,mBAAGtB,UAAU,qBAAb,qBACA,mDAAsB1B,KACrBsC,KAGT,uBACA,uBACA,wBAAQZ,UAAU,uBAAuBK,QAAS,kBAAMuC,KAAxD,mBACA,uBACA,uBACCtB,GACG,wBAAQtB,UAAU,uBAAuBK,QAAS,kBAAMwC,KAAxD,kCC3ID,SAASG,IAEpB,IAAMC,EAAOC,YAAiB,QAE9B,OACI,gCACI,sBAAKlD,UAAU,sBAAf,UACI,+CACA,qFAEJ,sBAAKA,UAAU,mBAAf,UACI,cAAClB,EAAD,IACA,cAACwB,EAAD,OAEJ,cAAC6C,EAAA,EAAD,CAEIjD,GAAI+C,EAAK/C,GACTkD,MAAOH,EAAKG,MACZC,OAAQJ,EAAKI,OACbC,SAAUL,EAAKK,SACfC,UAAWN,EAAKM,UAChBC,UAAWP,EAAKO,UAChBC,KAAMR,EAAKQ,KACXC,UAAWT,EAAKS,UAChBnG,IAAI,QATC0F,EAAK/C,S,gCCtB1B,4MAAO,IAAMyD,EAAwB,SAAUC,GAC3C,OAAOA,EAAOC,QAAQ,aAAa,SAASC,EAAOC,GAC/C,OAAO9B,OAAO+B,aAAaD,MAE1BF,QAAQ,UAAW,IACnBA,QAAQ,YAAa,QACrBA,QAAQ,SAAU,KAClBA,QAAQ,WAAY,KACpBA,QAAQ,WAAY,KACpBA,QAAQ,SAAU,MAGdI,EAAe,SAAUL,GAClC,OAAOM,UAAUN,GAAQC,QAAQ,MAAM,QAG9BM,EAAU,WACnB,MAAO,MAGEC,EAAM,WACf,MAAO,MAGEtB,EAAsB,SAAUJ,GACzC,OAAO2B,UAAUC,UAAUC,UAAU7B,IAG5B8B,EAAiB,SAAU9B,EAAM+B,GAC1C,IAAMC,EAAUhH,SAASiH,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAACnC,GAAO,CAC1BzC,KAAM,eAEVyE,EAAQI,KAAOC,IAAIC,gBAAgBJ,GACnCF,EAAQO,SAAWR,EACnB/G,SAASwH,KAAKC,YAAYT,GAC1BA,EAAQU,QACR1H,SAASwH,KAAKG,YAAYX,K","file":"static/js/26.14c06e22.chunk.js","sourcesContent":["const ingMap = new Map();\nconst newIngMap = new Map();\nlet ingString = \"\";\n\nexport const getIngList = function (){\n    return ingString;\n}\n\nexport const addToIngList = function (text){\n    ingString = ingString.concat('', text.toString());\n    returnLine();\n}\n\nconst returnLine = function (){\n    ingString = ingString.concat('', '\\n');\n}\n\nexport const clearIngList = function (){\n    ingString = \"\";\n}\n\nexport const clearMap = function (){\n    ingMap.clear();\n    newIngMap.clear();\n}\n\nexport const getResMap = function (){\n    return newIngMap;\n}\n\nexport const getIngValue = function (name){\n    return ingMap.get(name);\n}\n\nexport const getOil = function (spoon){\n    return parseInt(spoon) * 13;\n}\n\nexport const verifyInputs = function (input, pos){\n   for(let i = 0; i<input.length; i++){\n       if(i !== pos && isNaN(input[i])) return false;\n   }\n   return true;\n}\n\nexport const setAllReadOnly = function (tag, ids){\n    for (let i = 0; i<ids ;i++){\n        document.getElementById(tag + i).readOnly = true;\n    }\n}\n\nexport const getAllIngNames = function (){\n    return Array.from(ingMap.keys());\n}\n\nexport const addAllIng = function (tagName, tagValue, elID){\n    for (let i = 0; i<elID; i++){\n        const name = String(document.getElementById(tagName + i).value);\n        const value = parseInt(document.getElementById(tagValue + i).value);\n        ingMap.set(name, value);\n    }\n}\n\nexport const checkIDs = function (ids){\n    return Array.from(ingMap.keys()).length === ids;\n}\n\nexport const difRatio = function (oldVal, newVal){\n    return parseInt(newVal)/parseInt(oldVal);\n}\n\nexport const getOldVal = function (name){\n    return parseInt(ingMap.get(name));\n}\n\nexport const updateAllIng = function (name, newVal){\n    const ratio = difRatio(getOldVal(name), newVal);\n    getAllIngNames().forEach(el => {\n        newIngMap.set(el, Math.round(ingMap.get(el) * ratio));\n    })\n}","import React from \"react\";\nimport {getOil, verifyInputs} from \"./KitchenLogic\";\nimport \"./Ktools.css\";\n\nexport function Hydration(){\n\n    function findElements(pos){\n\n        let flour = parseInt(document.getElementById('hy-flour').value); // pos 0\n        let water = parseInt(document.getElementById('hy-water').value); // pos 1\n        let hydration = parseInt(document.getElementById('hydration').value); // pos 2\n\n        let yeast = parseInt(document.getElementById('hy-yeast').value);\n        let oil = parseInt(document.getElementById('hy-oil').value);\n\n        const input = [flour, water, hydration];\n\n        /*\n            formula:\n            flour = water / hydration * 100\n            water = flour * hydration / 100\n            hydration = water / flour * 100\n         */\n\n\n        if(verifyInputs(input, pos)){\n            const liquid = water + getOil(oil);\n            const solid = flour + yeast;\n            let quantity = 0;\n            if(pos === 0){\n                quantity = parseInt(Math.round(liquid / hydration * 100) - yeast);\n                document.getElementById('hy-flour').value = quantity;\n            }\n            if(pos === 1){\n                quantity = parseInt(Math.round(solid * hydration / 100) - getOil(oil));\n                document.getElementById('hy-water').value = quantity;\n            }\n            if(pos === 2){\n                quantity = parseInt(Math.round(liquid / solid * 100));\n                document.getElementById('hydration').value = quantity;\n            }\n\n        } else window.alert(\"Please check inputs\");\n\n    }\n\n    return(\n        <div className='hydration-calc'>\n            <h1>Hydration calculator</h1>\n            <p>\n                You can get quantity of flour, water or dough hydration level having 2 of these variables.<br/>\n                Yest and oil quantity are required for the calculation and cannot be deduced. Input zero if missing.<br/>\n                Remember 1 ml = 1 gr of water.\n            </p>\n            <div className='hy-calc-input-part'>\n                <p>\n                    Flour gr 🌾 : <span><input className='hy-calc-input' type=\"number\" name=\"flour\" id='hy-flour' min='1' defaultValue='100'/></span>\n                    <span><button onClick={() => findElements(0)} className='cooking-tools-button'>FIND</button></span>\n                </p>\n                <p>\n                    Rye/yeast 🦠 gr: <span><input className='hy-calc-input' type=\"number\" name=\"yeast\" id='hy-yeast' min='0' defaultValue='0'/></span>\n                </p>\n                <p>\n                    Water 💧 gr/ml: <span><input className='hy-calc-input' type=\"number\" name=\"water\" id='hy-water' min='1' defaultValue='60'/></span>\n                    <span><button onClick={() => findElements(1)} className='cooking-tools-button'>FIND</button></span>\n                </p>\n                <p>\n                    Oil tablespoon 🍈: <span><input className='hy-calc-input' type=\"number\" name=\"oil\" id='hy-oil' min='0' defaultValue='0'/></span>\n                    <span>(1 tablespoon = 13 gr)</span>\n                </p>\n                <p>\n                    hydration %: <span><input className='hy-calc-input' type=\"number\" name=\"hydration\" id='hydration' min='1' defaultValue='60'/></span>\n                    <span><button onClick={() => findElements(2)} className='cooking-tools-button'>FIND</button></span>\n                </p>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport \"./Ktools.css\";\nimport {\n    addAllIng, addToIngList,\n    checkIDs, clearIngList,\n    clearMap,\n    difRatio,\n    getAllIngNames, getIngList, getIngValue,\n    getResMap,\n    setAllReadOnly,\n    updateAllIng\n} from \"./KitchenLogic\";\nimport {copyTextToClipBoard} from \"../logic/TextHandler\";\n\nexport function IngQuantity(){\n    const [elID, setElID] = useState(0);\n    const [elem, setElem] = useState([]);\n    const [elOut, setElOut] = useState([]);\n    const [drop, setDrop] = useState([]);\n    const [add, setAdd] = useState(true);\n    const [full, setFull] = useState(false);\n    const [done, setDone] = useState(false);\n    const [result, setResult] = useState(false);\n    const [ratio, setRatio] = useState(0);\n\n    useEffect(()=>{\n        if (elID >= 2) setFull(true);\n    },[elID]);\n\n    const Input = () => {\n        const ingName = \"ing-name-\" + elID;\n        const ingSize = \"ing-size-\" + elID;\n        return(\n            <p>\n                <>{elID + 1}: </>\n                <span><input className='hy-calc-input' type=\"text\" name={ingName} key={ingName} id={ingName} defaultValue={'name' + (elID + 1)}/></span>\n                <span><input className='hy-calc-input' type=\"number\" name={ingSize} key={ingSize} id={ingSize} defaultValue='1' min='1'/></span>\n                <span> Quantity (gr, ml, ...)</span>\n            </p>\n        )\n    }\n\n    function addElement(){\n        setElID(elID + 1);\n        setElem(elem.concat(<Input key={elID}/>));\n    }\n\n    function start(){\n        clearMap();\n        let options = [];\n        addAllIng(\"ing-name-\",\"ing-size-\", elID);\n        let pos = 0;\n        getAllIngNames().forEach(n => {\n            options.push(<option key={pos} value={n}>{n}</option>);\n            pos++;\n        })\n        setDrop(options);\n        if(checkIDs(elID)){\n            setDone(true);\n            setFull(false);\n            setAllReadOnly(\"ing-name-\", elID);\n            setAllReadOnly(\"ing-size-\", elID);\n        } else window.alert(\"two or more ingredients are repeated pls check\");\n    }\n\n    function update(){\n        let out = [];\n        let counter = 1;\n        const sel = document.getElementById('ingSel').value;\n        const newVal = document.getElementById('newing').value;\n        setRatio(difRatio(getIngValue(sel), newVal));\n        if (parseInt(newVal) === 0) window.alert(\"Cannot be zero pls check\");\n        else {\n            updateAllIng(sel, newVal);\n            getResMap().forEach((value, key) => {\n                addToIngList(key + \":\" + value + \"gr/ml...\");\n                out.push(\n                    <p key={counter} id={counter}>{key}: {value} gr/ml...</p>\n                )\n                counter++;\n            })\n            setElOut(out);\n            setAdd(false);\n            setFull(false);\n            setDone(false);\n            setResult(true);\n        }\n    }\n\n    function reset(){\n        setElID(0);\n        setElem([]);\n        setElOut([]);\n        setDrop([]);\n        setAdd(true);\n        setFull(false);\n        setDone(false);\n        setResult(false);\n        setRatio(0);\n        clearMap();\n        clearIngList();\n    }\n\n    function copyToClipBoard(){\n        copyTextToClipBoard(getIngList()).then(() => window.alert(\"list copied\"));\n    }\n\n    return(\n        <div className='hydration-calc'>\n            <h1>Ingredients calculator</h1>\n            {add &&\n                <>\n                    <p> Use this to calculate ingredient proportions.</p>\n                    <ol className='instr-prop-ing'>\n                        <li>Click the button to add an ingredient space</li>\n                        <li>Add ingredients and quantity from the original recipe</li>\n                        <li>Choose which ingredients to modify</li>\n                        <li>Click the button to find all the new values</li>\n                    </ol>\n                </>\n            }\n            {result && <p className='cooking-tools-text'>Original</p>}\n            {add && <button className='cooking-tools-button' onClick={() => addElement()}>Add Ingredient</button>}\n            {elem}\n            {full && <button className='cooking-tools-button' onClick={() => start()}>Start</button>}\n            {done &&\n                <>\n                    <select id='ingSel'>{drop}</select>\n                    <p>New quantity for this ingredient</p>\n                    <input className='hy-calc-input' type=\"number\" name='newing' id='newing' defaultValue='1' min='1'/>\n                    <button className='cooking-tools-button' onClick={() => update()}>Update All Ingredients</button>\n                </>\n            }\n            {result &&\n                <>\n                    <p className='cooking-tools-text'>Updated</p>\n                    <p>Difference ratio: {ratio}</p>\n                    {elOut}\n                </>\n            }\n            <br/>\n            <br/>\n            <button className='cooking-tools-button' onClick={() => reset()}>Reset</button>\n            <br/>\n            <br/>\n            {result &&\n                <button className='cooking-tools-button' onClick={() => copyToClipBoard()}>Copy to Clipboard</button>\n            }\n        </div>\n    )\n}","import ButtonTemplate from \"../menu/ButtonTemplate\";\nimport React from \"react\";\nimport {getMenuItemByTag} from \"../menu/MenuHandler\";\nimport \"./Ktools.css\";\nimport {Hydration} from \"./Hydration\";\nimport {IngQuantity} from \"./IngQuantity\";\n\nexport default function Ktools(){\n\n    const back = getMenuItemByTag('back');\n\n    return(\n        <div>\n            <div className='cooking-tools-title'>\n                <h1>Cooking Tools</h1>\n                <p>Here you can find some useful cooking calculators</p>\n            </div>\n            <div className='cooking-calc-box'>\n                <Hydration/>\n                <IngQuantity/>\n            </div>\n            <ButtonTemplate\n                key={back.id}\n                id={back.id}\n                width={back.width}\n                height={back.height}\n                svgColor={back.svgColor}\n                textColor={back.textColor}\n                textField={back.textField}\n                icon={back.icon}\n                iconColor={back.iconColor}\n                tag='menu'\n            />\n        </div>\n    )\n}","export const replaceHtmlCharacters = function (string){\n    return string.replace(/&#(\\d+);/g, function(match, dec) {\n        return String.fromCharCode(dec);\n    })\n        .replace(/&quot;/g, '')\n        .replace(/&eacute;/g, 'é')\n        .replace(/&amp;/g, '\"')\n        .replace(/&ldquo;/g, '\"')\n        .replace(/&rdquo;/g, '\"')\n        .replace(/&shy;/g, '-');\n}\n\nexport const uriToYouTube = function (string){\n    return encodeURI(string).replace(/&/gi,'%26');\n}\n\nexport const newLine = function (){\n    return \"\\n\";\n}\n\nexport const tab = function (){\n    return \"\\t\";\n}\n\nexport const copyTextToClipBoard = function (text){\n    return navigator.clipboard.writeText(text);\n}\n\nexport const saveToTextFile = function (text, filename){\n    const element = document.createElement('a');\n    const file = new Blob([text], {\n        type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n    document.body.removeChild(element);\n}"],"sourceRoot":""}